<template>
    <div class="dr-softArgForm">
        <el-dialog :xs="20" :sm="20" :md="6" :lg="6" :xl="6" size="small" :title="$t('com.info')" :visible.sync="dialogState.show" :close-on-click-modal="false">
            <el-form :model="dialogState.formData" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
            

            </el-form>
        </el-dialog>
    </div>
</template>
<script>
import services from "../../store/services.js";
import _ from "lodash";
export default {
  props: {
    dialogState: Object,
    groups: Array
  },
  data() {
    return {
      rules: {
          name: [
          {
            required: true,
            message: this.$t("validate.inputNull", {
              label: this.$t("soft.name")
            }),
            trigger: "blur"
          }       
          ],
          ip: [
          {
            required: true,
            message: this.$t("validate.inputNull", {
              label: this.$t("soft.ip")
            }),
            trigger: "blur"
          }
        ],

          port: [
          {
            required: true,
            message: this.$t("validate.inputNull", {
              label: this.$t("soft.port")
            }),
            trigger: "blur"
          }
        ],


        type: [
          {
            required: true,
            message: this.$t("validate.inputNull", {
              label: this.$t("soft.type")
            }),
            trigger: "blur"
          }
        ],

        comments: [
          {
            required: true,
            message: this.$t("validate.inputNull", {
              label: this.$t("soft.comments")
            }),
            trigger: "blur"
          }
        ],
      },
      green: { color: "#13CE66" },
      red: { color: "#FF4949" },
    };
  },
  methods: {
    confirm() {
      this.$store.dispatch("hideSoftForm");
    },
    submitForm(formName) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          let params = this.dialogState.formData;
          // 更新
          if (this.dialogState.edit) {
            services.updateSoft(params).then(result => {
              if (result.data.status === 200) {
                this.$store.dispatch("hideSoftForm");
                this.$store.dispatch("getSoftList");
                this.$message({
                  message: this.$t("main.updateSuccess"),
                  type: "success"
                });
              } else {
                this.$message.error(result.data.message);
              }
            });
          } else {
            // 新增
            services.addSoft(params).then(result => {
              if (result.data.status === 200) {
                this.$store.dispatch("hideSoftForm");
                this.$store.dispatch("getSoftList");
                this.$message({
                  message: this.$t("main.addSuccess"),
                  type: "success"
                });
              } else {
                this.$message.error(result.data.message);
              }
            });
          }
        } else {
          console.log("error submit!!");
          return false;
        }
      });
    },
  }
};
</script>